// Generated by CoffeeScript 1.10.0

/*
 * Module dependencies
 */
var Logger, downloadList, fs, get, mkdirp, os, path, plugins, retis_plugin_dir, unpacker, urlm;

Logger = require('./logger').Logger;

fs = require('fs');

path = require('path');

os = require('os');

mkdirp = require('mkdirp');

urlm = require('url');

get = require('./downloader').get;

downloadList = require('./plugins/donwloadList');

unpacker = require('./plugins/unpacker');


/*
 * Vars
 */

plugins = module.exports = {};

retis_plugin_dir = '.retis/plugins';

retis_plugin_dir = path.join(os.homedir(), retis_plugin_dir);


/*
 * Download method
 * @param url {String} URL to download
 * @param options {Object} Options
 * @param callback {Function} callback
 */

plugins.fetchPlugin = function(url, options, callback) {
  var file_save, logger;
  logger = new Logger('retis', options);
  logger.deb('Downloading plugin...');
  file_save = (retis_plugin_dir + "/.tmp/download/") + url.split('/')[url.split('/').length - 2] + '.cson';
  if (downloadList.check(url, options) && typeof options.force === 'undefined' && fs.existsSync(file_save)) {
    logger.deb("Skipping plugin from url " + url + "...");
    callback();
    return;
  }
  this.download_options = {
    hostname: urlm.parse(url).hostname,
    path: urlm.parse(url).path,
    method: 'GET'
  };
  get(url, file_save, options, function(err) {
    if (err) {
      throw err;
    }
    logger.deb('Adding to download list...');
    downloadList.add(url, options);
    return unpacker.unpack(file_save, options, logger, function(err) {
      if (err) {
        throw err;
      }
      return callback();
    });
  });
};
